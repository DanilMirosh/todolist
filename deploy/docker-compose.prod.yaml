version: '3.8'

services:

  db:
    image: postgres:14.6-alpine
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - todolist_pg_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U ${DB_USER} -d ${DB_NAME}
      interval: 3s
      timeout: 3s
      retries: 10

  api:
    image: ${DOCKERHUB_USERNAME}/todolist:${TAG_NAME}
    restart: always
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: python3 -c 'import http.client;http.client.HTTPConnection("127.0.0.1:8000", timeout=1).request("GET", "/ping/")'
      interval: 3s
      timeout: 3s
      retries: 10

  collect_static:
    image: ${DOCKERHUB_USERNAME}/todolist:${TAG_NAME}
    build: .
    env_file:
      - .env
    entrypoint: ''
    command: python3 manage.py collectstatic -c --no-input
    volumes:
      - django_static:/opt/static

  frontend:
    image: sermalenk/skypro-front:lesson-36
    restart: always
    ports:
      - "80:80"
    depends_on:
      api:
        condition: service_healthy
      collect_static:
        condition: service_completed_successfully
    volumes:
      - django_static:/usr/share/nginx/html/static/
      - ./nginx.conf:/etc/nginx/conf.d/default.conf

volumes:
  todolist_pg_data:
  django_static:
